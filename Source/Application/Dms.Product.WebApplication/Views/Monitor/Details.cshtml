@model Dms.Product.Respository.Model.MonitorViewModel

@{
	ViewData["Title"] = "Details";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
	<div class="col-md-12 col-sm-12 col-xs-12">
		<div class="x_panel">
			<div class="x_title">
				<h2>实时数据</h2><small><a asp-action="Monitor" class="btn btn-link col-md-1">返回监控列表</a></small><small><a asp-action="History" asp-route-id="@Model.ID" class="btn btn-link">查询历史记录</a></small>
				<ul class="nav navbar-right panel_toolbox">
					<li>
						<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
					</li>
					<li class="dropdown">
						<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
						<ul class="dropdown-menu" role="menu">
							<li>
								<a href="#">Settings 1</a>
							</li>
							<li>
								<a href="#">Settings 2</a>
							</li>
						</ul>
					</li>
					<li>
						<a class="close-link"><i class="fa fa-close"></i></a>
					</li>
				</ul>
				<div class="clearfix"></div>
			</div>

			<div class="x_content" style="color:#666666">

				<div class="center col-md-2 col-sm-12 col-xs-12" style="width: 130px;height:150px;text-align:center;">
					<img class="img-responsive" alt="" src="~/images/oldman.jpg">
				</div>

				<div class="right col-md-10 col-sm-12 col-xs-12">
					<form asp-action="Index" class="form-horizontal form-label-left">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<div class="clearfix">
							<label asp-for="Customer.NAME" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.NAME</label>
							</div>

							<label asp-for="Customer.SEX" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.SEX</label>
							</div>
							<label asp-for="Customer.AGE" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.AGE</label>
							</div>
							<label asp-for="Customer.CARDID" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.CARDID</label>
							</div>
						</div>

						<div class="clearfix">
							<label asp-for="Bed.CODE" class="control-label col-md-1 col-sm-3 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Bed.CODE</label>
							</div>

							<label asp-for="Bed.MATID" class="control-label col-md-1 col-sm-3 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label id="lable_matcode" class="control-label">@Model.Bed.MATID</label>
							</div>
							<label asp-for="Customer.HISTORY" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.HISTORY</label>
							</div>
							<label asp-for="Customer.DIAGNOSIS" class="control-label col-md-1 col-sm-12 col-xs-12"></label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.DIAGNOSIS</label>
							</div>
						</div>


						<div class="clearfix">

							@*创建时间*@
							<label class="control-label col-md-1 col-sm-3 col-xs-12">使用日期</label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.MonitorDetial.Monitor.CDATE.Substring(0, 10)</label>
							</div>

							@*护理等级*@
							<label asp-for="Customer.NURSE" class="control-label col-md-1 col-sm-3 col-xs-12"></label>
							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.NURSE</label>
							</div>

							@*翻身计划*@
							<label asp-for="Customer.TURN" class="control-label col-md-1 col-sm-3 col-xs-12"></label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.Customer.TURN</label>
							</div>

						</div>

						@*监护时间*@
						<div class="clearfix">


							@*心率*@
							<label class="control-label col-md-1 col-sm-3 col-xs-12">心率监测</label>

							<div class="col-md-1 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.MonitorDetial.HeartRange.MinValue</label> -<label class="control-label">@Model.MonitorDetial.HeartRange.MaxVlalue</label>
							</div>




							<label class="control-label col-md-1 col-sm-12 col-xs-12">监护时间1</label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.MonitorDetial.TimeRange1.MinValue</label> -<label class="control-label">@Model.MonitorDetial.TimeRange1.MaxVlalue</label>
								离床<label class="control-label">@Model.MonitorDetial.TimeRange1.LeaveBedTime</label> 分钟/体动<label class="control-label">@Model.MonitorDetial.TimeRange1.MoveTime</label>秒
							</div>


							<label class="control-label col-md-1 col-sm-12 col-xs-12">监护时间2</label>
							<div class="col-md-2 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.MonitorDetial.TimeRange2.MinValue</label> -<label class="control-label">@Model.MonitorDetial.TimeRange2.MaxVlalue</label>
								离床<label class="control-label">@Model.MonitorDetial.TimeRange2.LeaveBedTime</label> 分钟/体动<label class="control-label">@Model.MonitorDetial.TimeRange2.MoveTime</label>秒
							</div>

							<label class="control-label col-md-1 col-sm-12 col-xs-12">监护时间3</label>
							<div class="col-md-3 col-sm-12 col-xs-12 ">
								<label class="control-label">@Model.MonitorDetial.TimeRange3.MinValue</label> -<label class="control-label">@Model.MonitorDetial.TimeRange3.MaxVlalue</label>
								离床<label class="control-label">@Model.MonitorDetial.TimeRange3.LeaveBedTime</label> 分钟/体动<label class="control-label">@Model.MonitorDetial.TimeRange3.MoveTime</label>秒
							</div>
						</div>

						<div class="clearfix">

							@*呼吸*@
							<label class="control-label col-md-1 col-sm-3 col-xs-12">呼吸监测</label>

							<div class="col-md-1 col-sm-12 col-xs-12">
								<label class="control-label">@Model.MonitorDetial.BreathRange.MinValue</label> -<label class="control-label">@Model.MonitorDetial.BreathRange.MaxVlalue</label>
							</div>



							<label class="control-label col-md-1 col-sm-12 col-xs-12">监护时间4</label>
							<div class="col-md-2 col-sm-12 col-xs-12">
								<label class="control-label">@Model.MonitorDetial.TimeRange4.MinValue</label> -<label class="control-label">@Model.MonitorDetial.TimeRange4.MaxVlalue</label>
								离床<label class="control-label">@Model.MonitorDetial.TimeRange4.LeaveBedTime</label> 分钟/体动<label class="control-label">@Model.MonitorDetial.TimeRange4.MoveTime</label>秒
							</div>

							<label class="control-label col-md-1 col-sm-12 col-xs-12">监护时间5</label>
							<div class="col-md-2 col-sm-12 col-xs-12">
								<label class="control-label">@Model.MonitorDetial.TimeRange5.MinValue</label> -<label class="control-label">@Model.MonitorDetial.TimeRange5.MaxVlalue</label>
								离床<label class="control-label">@Model.MonitorDetial.TimeRange1.LeaveBedTime</label> 分钟/体动<label class="control-label">@Model.MonitorDetial.TimeRange5.MoveTime</label>秒
							</div>


						</div>

					</form>
				</div>
			</div>

			@*style="padding: 15px; margin: 0px;border-radius:5px; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(189, 189, 189) 0px 0px 10px; background: #fff;"*@
			<div class="x_content">

				<!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->
				<div id="div_chart" style="width: 100%;height:580px;text-align:center;"><span style="margin:0 auto;line-height:50">I'm Ready.</span></div>

			</div>
		</div>


	</div>
</div>




@*<!-- jQuery -->
	<script src="../vendors/jquery/dist/jquery.min.js"></script>
	<!-- Bootstrap -->
	<script src="../vendors/bootstrap/dist/js/bootstrap.min.js"></script>
	<!-- FastClick -->
	<script src="../vendors/fastclick/lib/fastclick.js"></script>
	<!-- NProgress -->
	<script src="../vendors/nprogress/nprogress.js"></script>*@
<!-- ECharts -->
<script src="~/vendors/echarts/dist/echarts.min.js"></script>
<script src="~/vendors/echarts/map/js/world.js"></script>

<!-- Custom Theme Scripts -->
@*<script src="../build/js/custom.min.js"></script>*@


<script>

	var echartBar;

	function InitChart() {
		var theme = {
			color: [
				'#E51C23', '#3F51B5', '#BDC3C7', '#3498DB',
				'#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
			],

			title: {
				itemGap: 8,
				textStyle: {
					fontWeight: 'normal',
					color: '#408829'
				}
			},

			dataRange: {
				color: ['#1f610a', '#97b58d']
			},

			toolbox: {
				color: ['#408829', '#408829', '#408829', '#408829']
			},

			tooltip: {
				backgroundColor: 'rgba(0,0,0,0.5)',
				axisPointer: {
					type: 'line',
					lineStyle: {
						color: '#408829',
						type: 'dashed'
					},
					crossStyle: {
						color: '#408829'
					},
					shadowStyle: {
						color: 'rgba(200,200,200,0.3)'
					}
				}
			},

			dataZoom: {
				dataBackgroundColor: '#eee',
				fillerColor: 'rgba(64,136,41,0.2)',
				handleColor: '#408829'
			},
			grid: {
				borderWidth: 0
			},

			categoryAxis: {
				axisLine: {
					lineStyle: {
						color: '#408829'
					}
				},
				splitLine: {
					lineStyle: {
						color: ['#eee']
					}
				}
			},

			valueAxis: {
				axisLine: {
					lineStyle: {
						color: '#408829'
					}
				},
				splitArea: {
					show: true,
					areaStyle: {
						color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
					}
				},
				splitLine: {
					lineStyle: {
						color: ['#eee']
					}
				}
			},
			timeline: {
				lineStyle: {
					color: '#408829'
				},
				controlStyle: {
					normal: { color: '#408829' },
					emphasis: { color: '#408829' }
				}
			},

			k: {
				itemStyle: {
					normal: {
						color: '#68a54a',
						color0: '#a9cba2',
						lineStyle: {
							width: 1,
							color: '#408829',
							color0: '#86b379'
						}
					}
				}
			},
			map: {
				itemStyle: {
					normal: {
						areaStyle: {
							color: '#ddd'
						},
						label: {
							textStyle: {
								color: '#c12e34'
							}
						}
					},
					emphasis: {
						areaStyle: {
							color: '#99d2dd'
						},
						label: {
							textStyle: {
								color: '#c12e34'
							}
						}
					}
				}
			},
			force: {
				itemStyle: {
					normal: {
						linkStyle: {
							strokeColor: '#408829'
						}
					}
				}
			},
			chord: {
				padding: 4,
				itemStyle: {
					normal: {
						lineStyle: {
							width: 1,
							color: 'rgba(128, 128, 128, 0.5)'
						},
						chordStyle: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							}
						}
					},
					emphasis: {
						lineStyle: {
							width: 1,
							color: 'rgba(128, 128, 128, 0.5)'
						},
						chordStyle: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							}
						}
					}
				}
			},
			gauge: {
				startAngle: 225,
				endAngle: -45,
				axisLine: {
					show: true,
					lineStyle: {
						color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
						width: 8
					}
				},
				axisTick: {
					splitNumber: 10,
					length: 12,
					lineStyle: {
						color: 'auto'
					}
				},
				axisLabel: {
					textStyle: {
						color: 'auto'
					}
				},
				splitLine: {
					length: 18,
					lineStyle: {
						color: 'auto'
					}
				},
				pointer: {
					length: '90%',
					color: 'auto'
				},
				title: {
					textStyle: {
						color: '#333'
					}
				},
				detail: {
					textStyle: {
						color: 'auto'
					}
				}
			},
			textStyle: {
				fontFamily: 'Arial, Verdana, sans-serif'
			}
		};

		echartBar = echarts.init(document.getElementById('div_chart'), theme);

		echartBar.setOption({
			title: {
				text: '实时信息',
				subtext: '心率、呼吸实时信息曲线图'
			},
			tooltip: {
				trigger: 'axis'
			},
			legend: {
				data: ['心率', '呼吸']
				//data: data.legend.data
			},
			toolbox: {
				show: false
			},
			calculable: false,
			xAxis: [{
				type: 'category',
				data: ['1?', '2?', '3?', '4?', '5?', '6?', '7?', '8?', '9?', '10?', '11?', '12?']
				//data: data.xAxis.data
			}],
			yAxis: [{
				type: 'value'
			}],
			grid: {
				left: '2%',
				right: '5%',
				bottom: '1%',
				top: '13%',
				containLabel: true
			},
			//series: data.series
			series: [{
				name: '心率',
				type: 'line',
				//data: [90.0, 40.9, 70.0, 83.2, 75.6, 76.7, 135.6, 162.2, 132.6, 120.0, 60.4, 63.3],
				//data: data.series.series1,
				markPoint: {
					data: [{
						type: 'max',
						name: '最大值'
					}, {
						type: 'min',
						name: '最小值'
					}, {
						name: '心率',
						value: 2.3,
						xAxis: 19,
						yAxis: 60
					}]
				},
				markLine: {
					itemStyle: {
						normal: {
							label: {
								show: true,
								formatter: function (params) {
									return params.value + params.name
								}
							},
							lineStyle: {
								//type: 'dotted',
								color: '#E51C23'
								// type: 'solid'
								//'dotted'虚线 'solid'实线
							}
						}
					},
					data: [{
						type: 'average',
						name: '(avg)'
					},
					{
						yAxis: 110,
						name: '(max)'
					}
						,
					{
						yAxis: 60,
						name: '(min)'
					}
					]
				}
			}, {
				name: '呼吸',
				type: 'line',
				//data: [92.6, 85.9, 119.0, 126.4, 128.7, 70.7, 175.6, 182.2, 148.7, 118.8, 60.0, 52.3],
				//data: data.series.series2,
				markPoint: {
					data: [{
						type: 'max',
						name: '最大值'
					}, {
						type: 'min',
						name: '最小值'
					}]
				},
				markLine: {
					data: [{
						type: 'average',
						name: '平局值'
					}]
				},
				markPoint: {
					data: [{
						name: '呼吸',
						value: 112.2,
						xAxis: 19,
						yAxis: 110,
					}, {
						type: 'max',
						name: '最大值'
					}, {
						type: 'min',
						name: '最小值'
					}]
				},
				markLine: {
					itemStyle: {
						normal: {
							label: {
								show: true,
								formatter: function (params) {
									return params.value + params.name
								}
							},
							lineStyle: {
								//type: 'dotted',
								color: '#3F51B5'
								// type: 'solid'
								//'dotted'虚线 'solid'实线
							}
						}
					},
					data: [{
						type: 'average',
						name: '(avg)'
					},
					{
						yAxis: 80,
						name: '(max)'
					}
						,
					{
						yAxis: 45,
						name: '(min)'
					}
					]
				}
			}]
		});

		echartBar.hideLoading();
	}

	InitChart();

	function RefreshRealLine() {

		var label = document.getElementById("lable_matcode");
		var matcode = label.innerText.trim();

		//alert(matcode);

		$.ajax({

			url: 'RefreshDetailRealLine',

			data: { Test1: matcode, Test2: 3 },

			type: "POST",

			dataType: "json",

			async: false,

			success: function (data) {

				//没有数据时提示
				if (data.hasOwnProperty("type")) {

					alert(data.message);
					return;
				}

				console.log("刷新..");

				echartBar.setOption({
					//title: {
					//	text: '数据统计表',
					//	subtext: '到截止日期累计数据统计表'
					//},
					tooltip: {
						trigger: 'axis'
					},
					//legend: {
					//	//data: ['sales', 'purchases']
					//	data: data.legend.data
					//},
					toolbox: {
						show: false
					},
					calculable: false,
					xAxis: [{
						type: 'category',
						//data: ['1?', '2?', '3?', '4?', '5?', '6?', '7?', '8?', '9?', '10?', '11?', '12?']
						data: data.xAxis.data
					}],
					//yAxis: [
					//	{
					//	type: 'value'
					//	}
					//],
					yAxis: [
						{
							'type': 'value',
							//'name': '单位（次/分钟）',
							'max': 160,
							'min': 40
						}
						//,
						//{
						//	'type': 'value',
						//	'name': '呼吸（亿元）'
						//}
					],
					//series: data.series

					series: [{
						name: '心率',
						type: 'line',
						data: data.series[0].data,
						markPoint: {
							data: [{
								type: 'max',
								name: '最大值'
							}, {
								type: 'min',
								name: '最小值'
							},
								//{
								//	name: '心率',
								//	value: 2.3,
								//	xAxis: 19,
								//	yAxis: 60
								//	}
							]
						},
						markLine: {
							itemStyle: {
								normal: {
									label: {
										show: true,
										formatter: function (params) {
											return params.value + params.name
										}
									},
									lineStyle: {
										//type: 'dotted',
										color: '#E51C23'
										// type: 'solid'
										//'dotted'虚线 'solid'实线
									}
								}
							},
							data: [{
								type: 'average',
								name: '(avg)'
							},
							{
								yAxis: 110,
								name: '(max)'
							}
								,
							{
								yAxis: 60,
								name: '(min)'
							}
							]
						}
					}, {
						name: '呼吸',
						type: 'line',

						data: data.series[1].data,

						markPoint: {
							data: [{
								type: 'max',
								name: '最大值'
							}, {
								type: 'min',
								name: '最小值'
							}]
						},
						markLine: {
							data: [{
								type: 'average',
								name: '平局值'
							}]
						},
						markPoint: {
							data: [{
								name: '呼吸',
								value: 112.2,
								xAxis: 19,
								yAxis: 110,
							}, {
								type: 'max',
								name: '最大值'
							}, {
								type: 'min',
								name: '最小值'
							}]
						},
						markLine: {
							itemStyle: {
								normal: {
									label: {
										show: true,
										formatter: function (params) {
											return params.value + params.name
										}
									},
									lineStyle: {
										//type: 'dotted',
										color: '#3F51B5'
										// type: 'solid'
										//'dotted'虚线 'solid'实线
									}
								}
							},
							data: [{
								type: 'average',
								name: '(avg)'
							},
							{
								yAxis: 80,
								name: '(max)'
							}
								,
							{
								yAxis: 45,
								name: '(min)'
							}
							]
						}
					}]
				});

				echartBar.hideLoading();
			},

			error: function (XMLHttpRequest, textStatus, errorThrown) {

			alert("获取数据异常，请检查！");

			}
		});

	}

	function RefreshRealLine1() {

		//var thisObj = ${ obj };
		//var userId = thsiObj.attr("userId");
		//alert(userId);

		//alert(obj);

		$.ajax({

			url: 'RefreshRealLine',

			data: { Test1: 2, Test2: 3 },

			type: "POST",

			dataType: "json",

			async: false,

			success: function (data) {

				//没有数据时提示
				if (data.hasOwnProperty("type")) {

					alert(data.message);
					return;
				}

				console.log(data);

				console.log(data.legend.data);

				console.log(data.xAxis.data);

				//console.log(data);
				//console.log(data.CategoryList);
				//console.log(data.legendList);
				//console.log(data.seriesList);

				//	注意都是小写
				//var series = JSON.parse(data.series.series);

				var theme = {
					color: [
						'#26B99A', '#34495E', '#BDC3C7', '#3498DB',
						'#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
					],

					title: {
						itemGap: 8,
						textStyle: {
							fontWeight: 'normal',
							color: '#408829'
						}
					},

					dataRange: {
						color: ['#1f610a', '#97b58d']
					},

					toolbox: {
						color: ['#408829', '#408829', '#408829', '#408829']
					},

					tooltip: {
						backgroundColor: 'rgba(0,0,0,0.5)',
						axisPointer: {
							type: 'line',
							lineStyle: {
								color: '#408829',
								type: 'dashed'
							},
							crossStyle: {
								color: '#408829'
							},
							shadowStyle: {
								color: 'rgba(200,200,200,0.3)'
							}
						}
					},

					dataZoom: {
						dataBackgroundColor: '#eee',
						fillerColor: 'rgba(64,136,41,0.2)',
						handleColor: '#408829'
					},
					grid: {
						borderWidth: 0
					},

					categoryAxis: {
						axisLine: {
							lineStyle: {
								color: '#408829'
							}
						},
						splitLine: {
							lineStyle: {
								color: ['#eee']
							}
						}
					},

					valueAxis: {
						axisLine: {
							lineStyle: {
								color: '#408829'
							}
						},
						splitArea: {
							show: true,
							areaStyle: {
								color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
							}
						},
						splitLine: {
							lineStyle: {
								color: ['#eee']
							}
						}
					},
					timeline: {
						lineStyle: {
							color: '#408829'
						},
						controlStyle: {
							normal: { color: '#408829' },
							emphasis: { color: '#408829' }
						}
					},

					k: {
						itemStyle: {
							normal: {
								color: '#68a54a',
								color0: '#a9cba2',
								lineStyle: {
									width: 1,
									color: '#408829',
									color0: '#86b379'
								}
							}
						}
					},
					map: {
						itemStyle: {
							normal: {
								areaStyle: {
									color: '#ddd'
								},
								label: {
									textStyle: {
										color: '#c12e34'
									}
								}
							},
							emphasis: {
								areaStyle: {
									color: '#99d2dd'
								},
								label: {
									textStyle: {
										color: '#c12e34'
									}
								}
							}
						}
					},
					force: {
						itemStyle: {
							normal: {
								linkStyle: {
									strokeColor: '#408829'
								}
							}
						}
					},
					chord: {
						padding: 4,
						itemStyle: {
							normal: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								},
								chordStyle: {
									lineStyle: {
										width: 1,
										color: 'rgba(128, 128, 128, 0.5)'
									}
								}
							},
							emphasis: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								},
								chordStyle: {
									lineStyle: {
										width: 1,
										color: 'rgba(128, 128, 128, 0.5)'
									}
								}
							}
						}
					},
					gauge: {
						startAngle: 225,
						endAngle: -45,
						axisLine: {
							show: true,
							lineStyle: {
								color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
								width: 8
							}
						},
						axisTick: {
							splitNumber: 10,
							length: 12,
							lineStyle: {
								color: 'auto'
							}
						},
						axisLabel: {
							textStyle: {
								color: 'auto'
							}
						},
						splitLine: {
							length: 18,
							lineStyle: {
								color: 'auto'
							}
						},
						pointer: {
							length: '90%',
							color: 'auto'
						},
						title: {
							textStyle: {
								color: '#333'
							}
						},
						detail: {
							textStyle: {
								color: 'auto'
							}
						}
					},
					textStyle: {
						fontFamily: 'Arial, Verdana, sans-serif'
					}
				};

				var echartBar = echarts.init(document.getElementById('div_chart'), theme);

				echartBar.setOption({
					title: {
						text: '数据统计表',
						subtext: '到截止日期累计数据统计表'
					},
					tooltip: {
						trigger: 'axis'
					},
					legend: {
						//data: ['sales', 'purchases']
						data: data.legend.data
					},
					toolbox: {
						show: false
					},
					calculable: false,
					xAxis: [{
						type: 'category',
						//data: ['1?', '2?', '3?', '4?', '5?', '6?', '7?', '8?', '9?', '10?', '11?', '12?']
						data: data.xAxis.data
					}],
					yAxis: [{
						type: 'value'
					}],
					series: data.series
					//series: [{
					//	name: 'sales',
					//	type: 'bar',
					//	//data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],
					//	data: data.series.series1,
					//	markPoint: {
					//		data: [{
					//			type: 'max',
					//			name: '???'
					//		}, {
					//			type: 'min',
					//			name: '???'
					//		}]
					//	},
					//	markLine: {
					//		data: [{
					//			type: 'average',
					//			name: '???'
					//		}]
					//	}
					//}, {
					//	name: 'purchases',
					//	type: 'bar',
					//	//data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],
					//	data: data.series.series2,
					//	markPoint: {
					//		data: [{
					//			type: 'max',
					//			name: '???'
					//		}, {
					//			type: 'min',
					//			name: '???'
					//		}]
					//	},
					//	markLine: {
					//		data: [{
					//			type: 'average',
					//			name: '???'
					//		}]
					//	}
					//	//markPoint: {
					//	//	data: [{
					//	//		name: 'sales',
					//	//		value: 182.2,
					//	//		xAxis: 7,
					//	//		yAxis: 183,
					//	//	}, {
					//	//		name: 'purchases',
					//	//		value: 2.3,
					//	//		xAxis: 11,
					//	//		yAxis: 3
					//	//	}]
					//	//},
					//	//markLine: {
					//	//	data: [{
					//	//		type: 'average',
					//	//		name: '???'
					//	//	}]
					//	//}
					//}]
				});

				echartBar.hideLoading();

				//var myChart = echarts.init(document.getElementById('main'));

				//myChart.showLoading({

				//	text: '疯狂计算中',

				//	effect: 'whirling'

				//});

				//option = {

				//	title: {

				//		text: "Echarts在ASP.NET MVC下动态生成图表",

				//		subtext: "来自5653325的的博客"

				//	},

				//	tooltip: {

				//		trigger: 'axis'

				//	},

				//	legend: {
				//		data: data.legend.data
				//	},

				//	toolbox: {

				//		show: true,

				//		feature: {

				//			dataZoom: {

				//				yAxisIndex: 'none'

				//			},

				//			dataView: { readOnly: false },

				//			magicType: { type: ['line', 'bar'] },

				//			restore: {},

				//			saveAsImage: {}

				//		}

				//	},

				//	xAxis: {

				//		type: 'category',

				//		boundaryGap: false,

				//		data: data.xAxis.data

				//	},

				//	yAxis: {

				//		type: 'value',

				//		splitNumber: 10,

				//		axisLabel: {

				//			formatter: '{value} '

				//		}

				//	},

				//	series: series

				//};

				////给每个值设定相同的 显示最低、最高和平均值的线条

				//$(series).each(function (u) {

				//	this.markPoint = {

				//		data: [

				//			{ type: 'max', name: '最高成绩' },

				//			{ type: 'min', name: '最低成绩' }

				//		]

				//	};

				//	this.markLine = {

				//		data: [

				//			{ type: 'average', name: '平均值' },

				//			[{

				//				symbol: 'none',

				//				x: '93%',

				//				yAxis: 'max'

				//			}, {

				//				symbol: 'circle',

				//				label: {

				//					normal: {

				//						position: 'start',

				//						formatter: '最大值'

				//					}

				//				},

				//				type: 'max',

				//				name: '最高点'

				//			}]

				//		]

				//	};

				//});

				//myChart.setOption(option);

				//myChart.hideLoading();

			},

			error: function (XMLHttpRequest, textStatus, errorThrown) {

				alert("获取数据异常，请检查！");

			}

		});
	}


	setInterval(RefreshRealLine, 2000);

</script>

